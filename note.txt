
initialization and scafolding inpired by the article
https://codeburst.io/https-chidume-nnamdi-com-npm-module-in-typescript-12b3b22f0724

CREATE A GITHUB PROJECT AND CLONE GITHUB
- I have created the project node-typescrip-utils-enrico and cloned it

PREPARE A TYPESCRIPT NODE PACKAGE
Scafold directories
- create in the directory of the package an src directory to store the code

Install npm packages
- from the package directory run "npm init" to create a default package.json
- run "npm i typescript ts-node mocha chai --save-dev" to install the packages needed to debug and run tests on node typescript apps
- run "npm i @types/node @types/mocha @types/chai --save-dev" to load the types

Configure TS Compiler
- create in the package directory a file tsconfig.json with the configuration to be used by the TS compiler

Configure npm scripts
- add the following scripts to package.json to be able to launch compilation and tests
    -     "test": "mocha -r ts-node/register src/*.spec.ts",
    -     "tsc": "tsc"

Prepare vscode
- create a .vscode directory where you place a launch.json file that contains the commands to launch execution of functions from within vscode
consider that these commands can be successfully launched only if VSCode is started from within the folder of this package

WRITE THE CODE AND THE TESTS

MAKE THE PACKAGE AN "NPM PACKAGE"
https://codeburst.io/https-chidume-nnamdi-com-npm-module-in-typescript-12b3b22f0724
- create in the folder src an index.ts that defines what the package exports
- in tsconfig.json
    - in "compilerOptions"
        - set "declaration": true (so that index.d.ts is generated automatically)
- in package.json
    - set "main": "dist/index.js" (so that you declare where to look at stuff exported by the package)
    - set "types" : "dist/index.d.ts" (so that types are exported with the package)
- build the package (i.e. run the compiler) for instance launching the command "npm run tsc"

PUBLISH THE PACKAGE ON NPM
- publish the package running the command
    "npm package"
  make sure that you have an active npm user and you are logged in from the client

From now on you can install the newly published package for any project which can require it using the command
    "npm i node-typescript-utils-enrico"
